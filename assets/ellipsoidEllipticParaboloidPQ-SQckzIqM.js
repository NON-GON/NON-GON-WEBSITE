var w=Object.defineProperty;var R=(i,e,o)=>e in i?w(i,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[e]=o;var a=(i,e,o)=>R(i,typeof e!="symbol"?e+"":e,o);import"./modulepreload-polyfill-B5Qt9EMX.js";import{E as D}from"./Ellipsoid3D-Btneuy6X.js";import{E as G}from"./EllipticParaboloid3D-q-bSlXop.js";import{B as S}from"./Base3DScene-CnN_KzWd.js";import{b as d,a as l,C as r}from"./index-D1NIF6BJ.js";class f extends S{constructor(o,t,s){super(o);a(this,"ellipsoid");a(this,"ellipticParaboloid");this.ellipsoid=t,this.ellipticParaboloid=s}buildScene(){this.geometryManager.createGeometry(d.Ellipsoid,this.ellipsoid.getId(),this.ellipsoid.getParams()),this.geometryManager.createGeometry(d.EllipticParaboloid,this.ellipticParaboloid.getId(),this.ellipticParaboloid.getParams()),this.geometryManager.calculateProximityQuery(this.ellipsoid.getId(),this.ellipticParaboloid.getId())?(this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid.getId(),this.ellipsoid.getColor(),"line")),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipticParaboloid.getId(),this.ellipticParaboloid.getColor(),"line"))):(this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid.getId(),this.ellipsoid.getColor(),"mesh")),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipticParaboloid.getId(),this.ellipticParaboloid.getColor(),"mesh"))),this.makeSlidersInteraction(this.ellipsoid,this.ellipticParaboloid)}}window.addEventListener("DOMContentLoaded",()=>{const i=document.getElementById("c"),e=new l(0,0,15),o=25,t=50,s=25,c=new l(0,0,0),n=25,p="Ellipsoid",h=r.SHAPE1_COLOR_3D,g=new D(i,e,o,t,s,c,n,p,h),m=new l(0,-50,-15),P=25,b=25,y=100,E=new l(-90,0,0),C=25,I="Elliptic Paraboloid",M=r.SHAPE2_COLOR_3D,u=new G(i,m,P,b,y,E,C,I,M);new f(i,g,u).startAnimation()});
