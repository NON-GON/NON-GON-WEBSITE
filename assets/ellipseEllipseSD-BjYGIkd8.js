var D=Object.defineProperty;var O=(e,s,t)=>s in e?D(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;var o=(e,s,t)=>O(e,typeof s!="symbol"?s+"":s,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{E as c}from"./Ellipse2D-By0Q7lGL.js";import{B as G}from"./Base2DScene-DPBKex3w.js";import{G as r,V as a,a as h,C as p}from"./index-CtOlyrrk.js";class L extends G{constructor(t,i,l,n){super(t);o(this,"ellipse1");o(this,"ellipse2");o(this,"colorConnection");this.ellipse1=i,this.ellipse2=l,this.colorConnection=n}buildScene(){this.geometryManager.createGeometry(r.Ellipse,this.ellipse1.getId(),this.ellipse1.getParams());const t=this.geometryManager.getGeometryMesh(this.ellipse1.getId(),this.ellipse1.getColor(),"mesh");this.scene.add(t),this.geometryManager.createGeometry(r.Ellipse,this.ellipse2.getId(),this.ellipse2.getParams());const i=this.geometryManager.getGeometryMesh(this.ellipse2.getId(),this.ellipse2.getColor(),"mesh");this.scene.add(i),this.makeSlidersInteraction(this.ellipse1,this.ellipse2,this.colorConnection);let l=this.geometryManager.calculateShortestDistance(this.ellipse1.getId(),this.ellipse2.getId());this.drawShortestDistance(l[0],l[1],this.colorConnection)}}window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("c"),s=new a(35,35),t=50,i=25,l=new h(0,0,90),n=100,d="Blue Ellipse",m=p.SHAPE1_COLOR_2D,g=new c(e,s,t,i,l,n,d,m),C=new a(-35,-35),E=50,y=25,I=new h(0,0,90),u=100,w="Red Ellipse",M=p.SHAPE2_COLOR_2D,R=new c(e,C,E,y,I,u,w,M),S=p.CONNECTION_COLOR;new L(e,g,R,S).startAnimation()});
