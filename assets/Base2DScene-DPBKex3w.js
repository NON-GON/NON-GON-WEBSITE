var E=Object.defineProperty;var x=(u,t,e)=>t in u?E(u,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[t]=e;var p=(u,t,e)=>x(u,typeof t!="symbol"?t+"":t,e);import{W as w,P as G,S as j,c as k,C as R,d as B,V as f,L as F,B as L,e as b,f as O}from"./index-CtOlyrrk.js";class z{constructor(t){p(this,"geometryManager",B.getInstance());p(this,"renderer");p(this,"scene");p(this,"camera");p(this,"sliders");p(this,"render",()=>{this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.render)});this.canvas=t,this.renderer=new w({antialias:!0,preserveDrawingBuffer:!0,canvas:t}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(t.clientWidth,t.clientHeight,!1);const e=75,i=t.clientWidth/t.clientHeight,r=.1,n=1e3;this.camera=new G(e,i,r,n),this.camera.position.set(0,0,200),this.camera.lookAt(0,0,0),this.scene=new j,this.scene.background=new k(R.BACKGROUND),this.sliders=document.getElementById("sliders"),window.addEventListener("keydown",s=>{(s.key==="s"||s.key==="S")&&this.saveScreenshot()}),window.addEventListener("resize",this.onWindowResize.bind(this))}saveScreenshot(){const e=this.renderer.domElement.toDataURL("image/png"),i=document.createElement("a");i.href=e,i.download="non-gon-scene.png",i.style.display="none",document.body.appendChild(i),i.click(),document.body.removeChild(i)}makeSlidersSolo(t,e,i,r){const n=document.createElement("fieldset"),s=document.createElement("legend");s.textContent=t,n.appendChild(s),r!==void 0?this.makeLineSegmentEndpointsSliders(n,r,e):this.makeShapeCenterSliders(n,t,e),this.makeShapeRotationSliders(n,t,e),this.sliders&&this.sliders.appendChild(n)}makeSlidersInteraction(t,e,i,r){this.makeSlidersInteractionAux(t,e,i),this.makeSlidersInteractionAux(e,t,i,r)}makeSlidersInteractionAux(t,e,i,r){const n=document.createElement("fieldset"),s=document.createElement("legend");s.textContent=t.getId(),n.appendChild(s),r!==void 0?this.makeLineSegmentEndpointsSliders(n,r,r.getColor()):this.makeShapeCenterSlidersInteraction(n,t,e,i),i!==void 0&&this.makeShapeRotationSlidersInteraction(n,t,e,i),this.sliders&&this.sliders.appendChild(n)}makeShapeCenterSliders(t,e,i){const r=this.geometryManager.getGeometry(e).center;[["Center X: ",r.x,s=>this.geometryManager.changeCenterX(e,s)],["Center Y: ",r.y,s=>this.geometryManager.changeCenterY(e,s)]].forEach(([s,a,l])=>{const m=document.createElement("label");m.textContent=s;const o=document.createElement("input");o.type="range",o.min="-100",o.max="100",o.step="0.01",o.value=a.toString(),o.addEventListener("input",()=>{const c=parseFloat(o.value),g=this.scene.getObjectByName(e);g&&this.scene.remove(g),l(c),this.scene.add(this.geometryManager.getGeometryMesh(e,i,"mesh"))}),m.appendChild(o),t.appendChild(m),t.appendChild(document.createElement("br"))})}makeLineSegmentEndpointsSliders(t,e,i){const r=e.start,n=e.end;[["Start X: ",r.x,a=>e.start=new f(a,r.y)],["Start Y: ",r.y,a=>e.start=new f(r.x,a)],["End X: ",n.x,a=>e.end=new f(a,n.y)],["End Y: ",n.y,a=>e.end=new f(n.x,a)]].forEach(([a,l,m])=>{const o=document.createElement("label");o.textContent=a;const c=document.createElement("input");c.type="range",c.min="-100",c.max="100",c.step="0.01",c.value=l.toString(),c.addEventListener("input",()=>{const g=parseFloat(c.value),v=this.scene.getObjectByName(e);v&&this.scene.remove(v),m(g),this.scene.add(this.geometryManager.getGeometryMesh(e.getId(),i,"line"))}),o.appendChild(c),t.appendChild(o),t.appendChild(document.createElement("br"))})}makeShapeRotationSliders(t,e,i){[["Rotation: ",this.geometryManager.getGeometry(e).rotation.z,s=>this.geometryManager.changeRotationZ(e,s)]].forEach(([s,a,l])=>{const m=document.createElement("label");m.textContent=s;const o=document.createElement("input");o.type="range",o.min="-360",o.max="360",o.step="0.01",o.value=a.toString(),o.addEventListener("input",()=>{const c=parseFloat(o.value),g=this.scene.getObjectByName(e);g&&this.scene.remove(g),l(c),this.scene.add(this.geometryManager.getGeometryMesh(e,i,"mesh"))}),m.appendChild(o),t.appendChild(m),t.appendChild(document.createElement("br"))})}makeShapeCenterSlidersInteraction(t,e,i,r){const n=e.getId(),s=e.getColor(),a=i.getId(),l=i.getColor(),m=this.geometryManager.getGeometry(n).center;[["Center X: ",m.x,c=>this.geometryManager.changeCenterX(n,c)],["Center Y: ",m.y,c=>this.geometryManager.changeCenterY(n,c)]].forEach(([c,g,v])=>{const y=document.createElement("label");y.textContent=c;const d=document.createElement("input");d.type="range",d.min="-100",d.max="100",d.step="0.01",d.value=g.toString(),d.addEventListener("input",()=>{const S=parseFloat(d.value),C=this.scene.getObjectByName(n);if(C&&this.scene.remove(C),v(S),r!==void 0){this.scene.add(this.geometryManager.getGeometryMesh(n,s,"mesh"));const h=this.geometryManager.calculateShortestDistance(n,a),M=this.scene.getObjectByName(this.drawShortestDistance(h[0],h[1],r));M&&this.scene.remove(M)}else if(this.geometryManager.calculateProximityQuery(n,a)){const h=this.scene.getObjectByName(a);h&&this.scene.remove(h),this.geometryManager.deletePreviousGeometry(a),this.scene.add(this.geometryManager.getGeometryMesh(n,s,"line")),this.scene.add(this.geometryManager.getGeometryMesh(a,l,"line"))}else{const h=this.scene.getObjectByName(a);h&&this.scene.remove(h),this.geometryManager.deletePreviousGeometry(a),this.scene.add(this.geometryManager.getGeometryMesh(n,s,"mesh")),this.scene.add(this.geometryManager.getGeometryMesh(a,l,"mesh"))}}),y.appendChild(d),t.appendChild(y),t.appendChild(document.createElement("br"))})}makeShapeRotationSlidersInteraction(t,e,i,r){const n=e.getId(),s=e.getColor(),a=i.getId(),l=i.getColor();[["Rotation Z: ",this.geometryManager.getGeometry(n).rotation.z,c=>this.geometryManager.changeRotationZ(n,c)]].forEach(([c,g,v])=>{const y=document.createElement("label");y.textContent=c;const d=document.createElement("input");d.type="range",d.min="-360",d.max="360",d.step="0.01",d.value=g.toString(),d.addEventListener("input",()=>{const S=parseFloat(d.value),C=this.scene.getObjectByName(n);if(C&&this.scene.remove(C),v(S),r!==void 0){this.scene.add(this.geometryManager.getGeometryMesh(n,s,"mesh"));const h=this.geometryManager.calculateShortestDistance(n,a),M=this.scene.getObjectByName(this.drawShortestDistance(h[0],h[1],r));M&&this.scene.remove(M)}else if(this.geometryManager.calculateProximityQuery(n,a)){const h=this.scene.getObjectByName(a);h&&this.scene.remove(h),this.geometryManager.deletePreviousGeometry(a),this.scene.add(this.geometryManager.getGeometryMesh(n,s,"line")),this.scene.add(this.geometryManager.getGeometryMesh(a,l,"line"))}else{const h=this.scene.getObjectByName(a);h&&this.scene.remove(h),this.geometryManager.deletePreviousGeometry(a),this.scene.add(this.geometryManager.getGeometryMesh(n,s,"mesh")),this.scene.add(this.geometryManager.getGeometryMesh(a,l,"mesh"))}}),y.appendChild(d),t.appendChild(y),t.appendChild(document.createElement("br"))})}onWindowResize(){const t=this.canvas.clientWidth,e=this.canvas.clientHeight;(this.canvas.width!==t||this.canvas.height!==e)&&(this.renderer.setSize(t,e,!1),this.camera.aspect=t/e,this.camera.updateProjectionMatrix())}startAnimation(){this.buildScene(),this.render()}drawShortestDistance(t,e,i){console.log(t,e);const r=new F({color:i}),n=new L().setFromPoints([new b(parseFloat(t.x.toFixed(3)),parseFloat(t.y.toFixed(3)),"z"in t?parseFloat(t.z.toFixed(3)):0),new b(parseFloat(e.x.toFixed(3)),parseFloat(e.y.toFixed(3)),"z"in e?parseFloat(e.z.toFixed(3)):0)]),s=new O(n,r);return s.name="connection",this.scene.add(s),s.name}}export{z as B};
