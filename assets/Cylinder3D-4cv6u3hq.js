var u=Object.defineProperty;var c=(i,s,e)=>s in i?u(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var t=(i,s,e)=>c(i,typeof s!="symbol"?s+"":s,e);import{B as l}from"./Base3DScene-Dqi25TmD.js";import{b as y}from"./index-CtOlyrrk.js";class C extends l{constructor(e,r,h,a,o,d,n,g,m){super(e);t(this,"center");t(this,"xradius");t(this,"yradius");t(this,"height");t(this,"rotation");t(this,"segments");t(this,"id");t(this,"color");this.center=r,this.xradius=h,this.yradius=a,this.height=o,this.rotation=d,this.segments=n,this.id=g,this.color=m}getParams(){return{center:this.center,xradius:this.xradius,yradius:this.yradius,height:this.height,rotation:this.rotation,segments:this.segments}}getSliderParams(){return{x_radius:this.xradius,y_radius:this.yradius,height:this.height}}getId(){return this.id}getColor(){return this.color}buildScene(){this.geometryManager.createGeometry(y.Cylinder,this.id,this.getParams());const e=this.geometryManager.getGeometryMesh(this.id,this.color,"mesh");this.makeSlidersSolo(this.id,this.color,this.getSliderParams()),this.scene.add(e)}}export{C};
