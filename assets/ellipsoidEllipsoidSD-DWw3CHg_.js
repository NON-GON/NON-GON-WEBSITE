var M=Object.defineProperty;var G=(e,o,i)=>o in e?M(e,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[o]=i;var s=(e,o,i)=>G(e,typeof o!="symbol"?o+"":o,i);import"./modulepreload-polyfill-B5Qt9EMX.js";import{E as c}from"./Ellipsoid3D-jIiibaUt.js";import{B as L}from"./Base3DScene-Dqi25TmD.js";import{b as r,a as t,C as p}from"./index-CtOlyrrk.js";class _ extends L{constructor(i,l,d,n){super(i);s(this,"ellipsoid1");s(this,"ellipsoid2");s(this,"colorConnection");this.ellipsoid1=l,this.ellipsoid2=d,this.colorConnection=n}buildScene(){this.geometryManager.createGeometry(r.Ellipsoid,this.ellipsoid1.getId(),this.ellipsoid1.getParams()),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid1.getId(),this.ellipsoid1.getColor(),"mesh")),this.geometryManager.createGeometry(r.Ellipsoid,this.ellipsoid2.getId(),this.ellipsoid2.getParams()),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid2.getId(),this.ellipsoid2.getColor(),"mesh")),this.makeSlidersInteraction(this.ellipsoid1,this.ellipsoid2,this.colorConnection);let i=this.geometryManager.calculateShortestDistance(this.ellipsoid1.getId(),this.ellipsoid2.getId());this.drawShortestDistance(i[0],i[1],this.colorConnection)}}window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("c"),o=new t(0,0,50),i=25,l=50,d=25,n=new t(90,0,0),a=100,h="Blue Ellipsoid",m=p.SHAPE1_COLOR_3D,g=new c(e,o,i,l,d,n,a,h,m),C=new t(0,0,-50),E=25,u=50,y=25,R=new t(0,0,0),I=100,w="Red Ellipsoid",S=p.SHAPE2_COLOR_3D,D=new c(e,C,E,u,y,R,I,w,S),O=p.CONNECTION_COLOR;new _(e,g,D,O).startAnimation()});
