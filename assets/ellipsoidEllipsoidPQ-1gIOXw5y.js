var S=Object.defineProperty;var D=(e,i,s)=>i in e?S(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s;var d=(e,i,s)=>D(e,typeof i!="symbol"?i+"":i,s);import"./modulepreload-polyfill-B5Qt9EMX.js";import{E as n}from"./Ellipsoid3D-jIiibaUt.js";import{B as P}from"./Base3DScene-Dqi25TmD.js";import{b as p,a as o,C as r}from"./index-CtOlyrrk.js";class O extends P{constructor(s,l,t){super(s);d(this,"ellipsoid1");d(this,"ellipsoid2");this.ellipsoid1=l,this.ellipsoid2=t}buildScene(){this.geometryManager.createGeometry(p.Ellipsoid,this.ellipsoid1.getId(),this.ellipsoid1.getParams()),this.geometryManager.createGeometry(p.Ellipsoid,this.ellipsoid2.getId(),this.ellipsoid2.getParams()),this.geometryManager.calculateProximityQuery(this.ellipsoid1.getId(),this.ellipsoid2.getId())?(this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid1.getId(),this.ellipsoid1.getColor(),"line")),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid2.getId(),this.ellipsoid2.getColor(),"line"))):(this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid1.getId(),this.ellipsoid1.getColor(),"mesh")),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid2.getId(),this.ellipsoid2.getColor(),"mesh"))),this.makeSlidersInteraction(this.ellipsoid1,this.ellipsoid2)}}window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("c"),i=new o(0,0,15),s=25,l=50,t=25,a=new o(0,0,0),c=25,h="Blue Ellipsoid",g=r.SHAPE1_COLOR_3D,m=new n(e,i,s,l,t,a,c,h,g),y=new o(0,0,-15),E=25,u=50,C=25,I=new o(0,0,0),M=25,R="Red Ellipsoid",w=r.SHAPE2_COLOR_3D,G=new n(e,y,E,u,C,I,M,R,w);new O(e,m,G).startAnimation()});
