var y=Object.defineProperty;var w=(e,n,t)=>n in e?y(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;var s=(e,n,t)=>w(e,typeof n!="symbol"?n+"":n,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as I}from"./ConvexLine2D-0CuqNjA4.js";import{L as D}from"./LineSegment2D-DVAeAUVS.js";import{G as a,V as r,a as g,C as m}from"./index-D1NIF6BJ.js";import{B as M}from"./Base2DScene-ETx5bN0u.js";class O extends M{constructor(t,i,o,c){super(t);s(this,"convexLine");s(this,"lineSegment");s(this,"colorConnection");this.convexLine=i,this.lineSegment=o,this.colorConnection=c}buildScene(){this.geometryManager.createGeometry(a.ConvexLine,this.convexLine.getId(),this.convexLine.getParams());const t=this.geometryManager.getGeometryMesh(this.convexLine.getId(),this.convexLine.getColor(),"line",2);this.scene.add(t),this.geometryManager.createGeometry(a.Line,this.lineSegment.getId(),this.lineSegment.getParams());const i=this.geometryManager.getGeometryMesh(this.lineSegment.getId(),this.lineSegment.getColor(),"line",3);this.scene.add(i),this.makeSlidersInteraction(this.convexLine,this.lineSegment,this.colorConnection,this.lineSegment);let o=this.geometryManager.calculateShortestDistance(this.convexLine.getId(),this.lineSegment.getId());this.drawShortestDistance(o[0],o[1],this.colorConnection)}}window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("c"),n=new r(0,0),t=new g(0,0,31),i=100,o="Convex Line",c=m.SHAPE1_COLOR_2D,l=new I(e,n,t,i,o,c),h=new r(25,-25),L=new r(-5,-25),S=new g(0,0,0),d="Line Segment",v=m.SHAPE2_COLOR_2D,C=new D(e,h,L,S,d,v),x=m.CONNECTION_COLOR;new O(e,l,C,x).startAnimation()});
