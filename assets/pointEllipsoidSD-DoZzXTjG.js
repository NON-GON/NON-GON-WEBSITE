var D=Object.defineProperty;var I=(o,e,t)=>e in o?D(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var i=(o,e,t)=>I(o,typeof e!="symbol"?e+"":e,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{P as w}from"./Point3D-Ce-vxuxw.js";import{E as O}from"./Ellipsoid3D-jIiibaUt.js";import{B as P}from"./Base3DScene-Dqi25TmD.js";import{G as S,b as u,a as r,C as d}from"./index-CtOlyrrk.js";class M extends P{constructor(t,s,n,l){super(t);i(this,"point");i(this,"ellipsoid");i(this,"colorConnection");this.point=s,this.ellipsoid=n,this.colorConnection=l}buildScene(){this.geometryManager.createGeometry(S.Point,this.point.getId(),this.point.getParams()),this.scene.add(this.geometryManager.getGeometryMesh(this.point.getId(),this.point.getColor(),"mesh")),this.geometryManager.createGeometry(u.Ellipsoid,this.ellipsoid.getId(),this.ellipsoid.getParams()),this.scene.add(this.geometryManager.getGeometryMesh(this.ellipsoid.getId(),this.ellipsoid.getColor(),"mesh")),this.makeSlidersInteraction(this.point,this.ellipsoid,this.colorConnection);let t=this.geometryManager.calculateShortestDistance(this.point.getId(),this.ellipsoid.getId());this.drawShortestDistance(t[0],t[1],this.colorConnection)}}window.addEventListener("DOMContentLoaded",()=>{const o=document.getElementById("c"),e=new r(25,25,25),t="Point",s=d.SHAPE1_COLOR_3D,n=new w(o,e,t,s),l=new r(-25,-25,-25),p=25,a=50,c=25,h=new r(0,0,0),m=100,g="Ellipsoid",C=d.SHAPE2_COLOR_3D,y=new O(o,l,p,a,c,h,m,g,C),E=d.CONNECTION_COLOR;new M(o,n,y,E).startAnimation()});
