var M=Object.defineProperty;var S=(e,c,t)=>c in e?M(e,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[c]=t;var n=(e,c,t)=>S(e,typeof c!="symbol"?c+"":c,t);import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as O}from"./ConvexCircle2D-CbJBa7jo.js";import{C as p}from"./Circle2D-DhW5KsRI.js";import{G as l,V as C,a,C as s}from"./index-D1NIF6BJ.js";import{B as u}from"./Base2DScene-ETx5bN0u.js";class R extends u{constructor(t,r,o,i){super(t);n(this,"convexCircle");n(this,"circle");n(this,"colorConnection");this.convexCircle=r,this.circle=o,this.colorConnection=i}buildScene(){this.geometryManager.createGeometry(l.ConvexCircle,this.convexCircle.getId(),this.convexCircle.getParams());const t=this.geometryManager.getGeometryMesh(this.convexCircle.getId(),this.convexCircle.getColor(),"mesh");this.scene.add(t),this.geometryManager.createGeometry(l.Circle,this.circle.getId(),this.circle.getParams());const r=this.geometryManager.getGeometryMesh(this.circle.getId(),this.circle.getColor(),"mesh");this.scene.add(r),this.makeSlidersInteraction(this.convexCircle,this.circle,this.colorConnection);let o=this.geometryManager.calculateShortestDistance(this.convexCircle.getId(),this.circle.getId());this.drawShortestDistance(o[0],o[1],this.colorConnection)}}window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("c"),c=new C(35,35),t=25,r=new a(0,0,180),o=100,i="Convex Circle",h=s.SHAPE1_COLOR_2D,m=new O(e,c,t,r,o,i,h),d=new C(-35,-35),g=25,v=new a(0,0,0),x=100,y="Circle",I=s.SHAPE2_COLOR_2D,w=new p(e,d,g,v,x,y,I),D=s.CONNECTION_COLOR;new R(e,m,w,D).startAnimation()});
